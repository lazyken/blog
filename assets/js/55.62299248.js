(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{416:function(e,t,a){"use strict";a.r(t);var s=a(45),v=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"set-和-map-数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-和-map-数据结构"}},[e._v("#")]),e._v(" Set 和 Map 数据结构")]),e._v(" "),a("h2",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" Set")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("Set.prototype.size")]),e._v("：返回 "),a("code",[e._v("Set")]),e._v(" 实例的成员总数。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.add(value)")]),e._v("：添加某个值，返回 "),a("code",[e._v("Set")]),e._v(" 结构本身。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.delete(value)")]),e._v("：删除某个值，返回一个布尔值，表示删除是否成功。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.has(value)")]),e._v("：返回一个布尔值，表示该值是否为 "),a("code",[e._v("Set")]),e._v(" 的成员。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.clear()")]),e._v("：清除所有成员，没有返回值。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.keys()")]),e._v("：返回键名的遍历器")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.values()")]),e._v("：返回键值的遍历器")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.entries()")]),e._v("：返回键值对的遍历器")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Set.prototype.forEach()")]),e._v("：使用回调函数遍历每个成员")])])]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" set "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// [1, 2, 3, 4]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// [NaN]")]),e._v("\n")])])]),a("h2",{attrs:{id:"weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[e._v("#")]),e._v(" WeakSet")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("WeakSet")]),e._v(" 的成员只能是对象，而不能是其他类型的值")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("WeakSet")]),e._v(" 中的对象都是弱引用，即垃圾回收机制不考虑 "),a("code",[e._v("WeakSet")]),e._v(" 对该对象的引用")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("WeakSet")]),e._v(" 没有 "),a("code",[e._v("size")]),e._v(" 属性，没有办法遍历它的成员。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("WeakSet.prototype.add(value)")]),e._v("：向 "),a("code",[e._v("WeakSet")]),e._v(" 实例添加一个新成员。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("WeakSet.prototype.delete(value)")]),e._v("：清除 "),a("code",[e._v("WeakSet")]),e._v(" 实例的指定成员。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("WeakSet.prototype.has(value)")]),e._v("：返回一个布尔值，表示某个值是否在 "),a("code",[e._v("WeakSet")]),e._v(" 实例之中。")])])]),e._v(" "),a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[e._v("#")]),e._v(" Map")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("和对象类似，对象的 "),a("code",[e._v("key")]),e._v(" 只能是 string，"),a("code",[e._v("Map")]),e._v(" 的 "),a("code",[e._v("key")]),e._v(" 可以使用任意类型的值。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.size")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.set(key, value)")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.get(key)")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.has(key)")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.delete(key)")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.clear()")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.keys()")]),e._v("：返回键名的遍历器。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.values()")]),e._v("：返回键值的遍历器。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.entries()")]),e._v("：返回所有成员的遍历器。")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("Map.prototype.forEach()")]),e._v("：遍历 "),a("code",[e._v("Map")]),e._v(" 的所有成员。需要特别注意的是，"),a("code",[e._v("Map")]),e._v(" 的遍历顺序就是插入顺序。")])])]),e._v(" "),a("h2",{attrs:{id:"weakmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[e._v("#")]),e._v(" WeakMap")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("WeakMap")]),e._v(" 只接受对象作为键名（"),a("code",[e._v("null")]),e._v(" 除外）")]),e._v(" "),a("li",[a("code",[e._v("WeakMap")]),e._v(" 的键名所指向的对象，不计入垃圾回收机制。")]),e._v(" "),a("li",[a("code",[e._v("WeakMap")]),e._v(" 没有遍历操作（即没有 "),a("code",[e._v("keys()")]),e._v("、"),a("code",[e._v("values()")]),e._v("和 "),a("code",[e._v("entries()")]),e._v("方法），也没有 "),a("code",[e._v("size")]),e._v(" 属性。")]),e._v(" "),a("li",[a("code",[e._v("WeakMap")]),e._v(" 无法清空，即不支持 "),a("code",[e._v("clear")]),e._v(" 方法。因此，"),a("code",[e._v("WeakMap")]),e._v(" 只有四个方法可用："),a("code",[e._v("get()")]),e._v("、"),a("code",[e._v("set()")]),e._v("、"),a("code",[e._v("has()")]),e._v("、"),a("code",[e._v("delete()")]),e._v("。")])])])}),[],!1,null,null,null);t.default=v.exports}}]);